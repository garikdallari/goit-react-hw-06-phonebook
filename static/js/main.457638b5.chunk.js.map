{"version":3,"sources":["redux/types.js","redux/reducers/filter.js","redux/reducers/contacts.js","redux/reducers/index.js","redux/store.js","Components/ContactForm/ContactForm.styled.jsx","Components/Utils/Button/Button.styled.jsx","Components/Utils/Button/Button.jsx","Components/Utils/Title/Title.styled.jsx","Components/Utils/Title/Title.jsx","Components/Utils/Input/Input.styled.jsx","Components/Utils/Input/Input.jsx","Components/ContactForm/ContactForm.jsx","redux/actions/contacts.js","Components/ContactItem/ContactItem.styled.jsx","Components/ContactItem/ContactItem.jsx","Components/ContactList/Contacts.styled.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Utils/Container/Container.styled.jsx","Components/Utils/Container/Container.jsx","App.js","index.js"],"names":["ADD_CONTACT","DELETE_CONTACT","FILTER_CONTACT","filterReducer","state","action","type","payload","initialState","id","name","number","contactsReducer","filter","contact","rootReducer","combineReducers","contacts","store","createStore","devToolsEnhancer","Form","styled","form","Btn","button","Button","text","onClick","title","PageTitle","h2","props","size","color","marginR","marginL","marginT","Title","Field","input","Input","value","onChange","placeholder","connect","dispatch","onSubmit","data","nextId","addContact","useState","setName","setNumber","handleChange","e","target","preventDefault","find","toLowerCase","alert","pattern","required","Name","p","Number","ContactItem","List","ul","Item","li","filterByName","includes","onDeleteContact","deleteContact","map","Wrapper","div","Container","children","App","style","border","width","padding","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.457638b5.chunk.js","sourcesContent":["export const ADD_CONTACT = \"ADD_CONTACT\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\nexport const FILTER_CONTACT = \"FILTER_CONTACT\";\n","import { FILTER_CONTACT } from \"../types\";\n\nconst filterReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case FILTER_CONTACT:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { ADD_CONTACT, DELETE_CONTACT } from \"../types\";\nconst initialState = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\nconst contactsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return [...state, action.payload];\n    case DELETE_CONTACT:\n      return state.filter((contact) => action.payload !== contact.id);\n    default:\n      return state;\n  }\n};\n\nexport default contactsReducer;\n","import { combineReducers } from \"redux\";\n\nimport filterReducer from \"./filter\";\nimport contactsReducer from \"./contacts\";\n\nexport const rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n","import { createStore } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { rootReducer } from \"./reducers\";\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Btn = styled.button`\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n`;\r\n","import React from \"react\";\r\nimport { Btn } from \"./Button.styled\";\r\n\r\nfunction Button({ text, onClick, title }) {\r\n  return (\r\n    <Btn title={title} onClick={onClick}>\r\n      {text}\r\n    </Btn>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const PageTitle = styled.h2`\r\n  font-size: ${(props) => props.size}px;\r\n  color: ${(props) => props.color};\r\n  margin-right: ${(props) => props.marginR}px;\r\n  margin-left: ${(props) => props.marginL}px;\r\n  margin-top: ${(props) => props.marginT}px;\r\n`;\r\n","import React from \"react\";\r\nimport { PageTitle } from \"./Title.styled\";\r\n\r\nfunction Title({ marginT, marginR, marginL, text, size, color }) {\r\n  return (\r\n    <PageTitle\r\n      marginT={marginT}\r\n      marginR={marginR}\r\n      marginL={marginL}\r\n      color={color}\r\n      size={size}\r\n    >\r\n      {text}\r\n    </PageTitle>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Field = styled.input`\r\n  width: 300px;\r\n  border: none;\r\n  border-bottom: 1px solid gray;\r\n  background-color: transparent;\r\n\r\n  &:hover {\r\n    border-bottom: 1px solid #000d59;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Field } from \"./Input.styled\";\r\n\r\nfunction Input({ value, type, name, onChange, placeholder }) {\r\n  return (\r\n    <Field\r\n      placeholder={placeholder}\r\n      value={value}\r\n      type={type}\r\n      name={name}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/actions/contacts\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"./ContactForm.styled\";\nimport { MdPersonAdd } from \"react-icons/md\";\nimport Button from \"../Utils/Button/Button\";\nimport Title from \"../Utils/Title/Title\";\nimport Input from \"../Utils/Input/Input\";\n\nfunction ContactForm({ contacts, onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const checkOnSameContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (checkOnSameContact) {\n      alert(`${name} is already in contacts`);\n      setName(\"\");\n      setNumber(\"\");\n      return;\n    }\n    if (name === \"\" && number === \"\") {\n      return;\n    }\n    if (name === \"\" || number === \"\") {\n      alert(\"Pleasy fill empty fields\");\n      return;\n    }\n\n    onSubmit({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Title marginR={15} size={18} text=\"Name\" />\n      <Input\n        placeholder=\"type name...\"\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n      <Title marginR={15} marginL={30} size={18} text=\"Number\" />\n      <Input\n        placeholder=\"type number...\"\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n      <Button\n        title=\"Add to contacts\"\n        text={<MdPersonAdd size={50} color=\"#187bcd\" />}\n        size={20}\n        type=\"submit\"\n      />\n    </Form>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (data) => dispatch(addContact(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from \"../types\";\nimport nextId from \"react-id-generator\";\n\nexport const addContact = (data) => ({\n  type: ADD_CONTACT,\n  payload: {\n    id: nextId(),\n    name: data.name,\n    number: data.number,\n  },\n});\n\nexport const deleteContact = (id) => ({\n  type: DELETE_CONTACT,\n  payload: id,\n});\n\nexport const filterContact = (value) => ({\n  type: FILTER_CONTACT,\n  payload: value,\n});\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Name = styled.p`\r\n  font-size: 18px;\r\n`;\r\nexport const Number = styled.p``;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Name, Number } from \"./ContactItem.styled\";\r\n\r\nfunction ContactItem({ contact }) {\r\n  return (\r\n    <>\r\n      <Name>{contact.name}</Name>\r\n      <Number>{contact.number}</Number>\r\n    </>\r\n  );\r\n}\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\nexport default ContactItem;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n`;\r\nexport const Item = styled.li`\r\n  padding: 5px;\r\n  margin-right: 40px;\r\n`;\r\n","import { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/actions/contacts\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Utils/Button/Button\";\nimport { MdDeleteForever } from \"react-icons/md\";\nimport { List, Item } from \"./Contacts.styled\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <>\n      <List>\n        {contacts.map((contact) => (\n          <Item key={contact.id}>\n            <ContactItem contact={contact} />\n            <Button\n              title=\"Remove from contacts\"\n              text={<MdDeleteForever color=\"#ff4f4f\" size={30} />}\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            />\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst filterByName = (state) => {\n  return state.contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(state.filter.toLowerCase())\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: filterByName(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterContact } from \"../../redux/actions/contacts\";\nimport PropTypes from \"prop-types\";\nimport Title from \"../Utils/Title/Title\";\nimport Input from \"../Utils/Input/Input\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <>\n      <Title size={18} text=\"Find Contacts by name\" />\n      <Input\n        placeholder=\"type to find contacts...\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(filterContact(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  padding: 15px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n","import React from \"react\";\r\nimport { Wrapper } from \"./Container.styled\";\r\n\r\nfunction Container({ children }) {\r\n  return <Wrapper>{children}</Wrapper>;\r\n}\r\n\r\nexport default Container;\r\n","import ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Container from \"./Components/Utils/Container/Container\";\nimport Title from \"./Components/Utils/Title/Title\";\n\nfunction App() {\n  // useEffect(() => {\n  //   const contacts = localStorage.getItem(\"contacts\");\n  //   const parsedContacts = JSON.parse(contacts);\n\n  //   if (parsedContacts) {\n  //     setContacts(parsedContacts);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  //   if (contacts.length === 0) {\n  //     localStorage.removeItem(\"contacts\");\n  //   }\n  // }, [contacts]);\n\n  return (\n    <Container>\n      <Title color=\"#424242\" size={30} text=\"Phonebook\" />\n      <div\n        style={{\n          border: \"1px solid gray\",\n          width: \"fit-content\",\n          padding: \"20px\",\n        }}\n      >\n        <ContactForm />\n      </div>\n      <Filter />\n      <Title marginT={40} size={20} text=\"Contacts\" />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}